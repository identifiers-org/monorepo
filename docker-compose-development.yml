# identifiers.org Satellite docker-compose based development environment
# Author: Manuel Bernal Llinares <mbdebian@gmail.com>

# NOTE - We can see circular dependencies over here, where link-checker dependes on the resolver, which depends on the
# resource recommender, which also depends on the resolver... Fortunately, what we are testing here is the resource
# recommender, and not the resolution API, we also know that the resolver only requires the recommender for resolving
# purposes, not for the current iteration of the insight API. Anyway, this is something that should be addressed in the
# future, we should try to avoid circular dependencies. In addition, for those unit tests that are testing resource
# recommender internals, no other services are needed, and the rest of the tests, e.g. integration tests, the resource
# recommender will run fully, so... let's see how it goes, hahaha!
version: "3.5"
services:
    link-checker:
        image: identifiersorg/cloud-ws-link-checker
        environment:
            - WS_LINK_CHECKER_CONFIG_REDIS_HOST=redis
            - WS_LINK_CHECKER_CONFIG_BACKEND_SERVICE_RESOLVER_HOST=resolver
            - WS_LINK_CHECKER_CONFIG_DAEMON_PERIODIC_LINK_CHECK_REQUESTER_ENABLED=false
            - SPRING_PROFILES_ACTIVE=authdisabled
        ports:
            - "8084:8084"
        depends_on:
            - resolver
            - redis
    resolver:
        image: identifiersorg/cloud-ws-resolver
        environment:
            - WS_RESOLVER_CONFIG_REDIS_HOST=redis
            - WS_RESOLVER_CONFIG_REDIS_PORT=6379
            - WS_RESOLVER_CONFIG_RESOURCE_RECOMMENDER_HOST=host.docker.internal
            - WS_RESOLVER_CONFIG_RESOURCE_RECOMMENDER_PORT=8083
            - WS_RESOLVER_JVM_MEMORY_MAX=1024m
            - WS_RESOLVER_CONFIG_APPLICATION_ACTIVE_PROFILE=authdisabled
            - WS_RESOLVER_CONFIG_REGISTRY_RESOLUTION_DATASET_ENDPOINT=https://registry.api.identifiers.org/resolutionApi/getResolverDataset
        ports:
            - "8080:8080"
        depends_on:
            - redis
    redis:
        image: redis:4.0.8-alpine
        ports:
            - "6379:6379"
networks:
    default:
        name: idorg-dev-satellite-resource-recommender