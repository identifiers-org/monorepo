# Development environment for working with the Link Checker service
# Author: Manuel Bernal Llinares <mbdebian@gmail.com>
# TODO This development environment is not fully functional, because the recommender depends on the very same service we're working on, and it will not escape it's container to connect to the host OS.
services:
    resolver:
        image: identifiersorg/cloud-ws-resolver
        environment:
            - WS_RESOLVER_CONFIG_REDIS_HOST=redis
            - WS_RESOLVER_CONFIG_REDIS_PORT=6379
            - WS_RESOLVER_CONFIG_RESOURCE_RECOMMENDER_HOST=recommender
            - WS_RESOLVER_CONFIG_RESOURCE_RECOMMENDER_PORT=8083
            - WS_RESOLVER_JVM_MEMORY_MAX=1024m
            - WS_RESOLVER_CONFIG_APPLICATION_ACTIVE_PROFILE=authdisabled
            - WS_RESOLVER_CONFIG_REGISTRY_RESOLUTION_DATASET_ENDPOINT=https://registry.api.identifiers.org/resolutionApi/getResolverDataset
        ports:
            - "8080:8080"
        depends_on:
            - redis
            - recommender
    redis:
        image: redis:7.2-alpine
        ports:
            - "6379:6379"
    recommender:
        image: identifiersorg/cloud-ws-resource-recommender
        environment:
            - WS_RESOURCE_RECOMMENDER_JVM_MEMORY_MAX=1024m
            - WS_RESOURCE_RECOMMENDER_CONFIG_BACKEND_SERVICE_LINK_CHECKER_HOST=host.docker.internal
            - spring.profiles.active=authdisabled
        ports:
            - "8083:8083"
networks:
    default:
        name: idorg-dev-satellite-link-checker